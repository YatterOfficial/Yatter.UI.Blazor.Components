@using ListBuilder = Yatter.UI.ListBuilder.ListItems;

<style>
    .center {
        text-align: center;
    }
</style>

<div class="center" style="visibility:@CastItem?.Visibility;color:@CastItem?.TextColor;@WordWrapping;margin:@CastItem?.Margin;padding:@CastItem?.Padding;background-color:@CastItem?.BackgroundColor">@CastItem?.Text</div>

@code {


    private object? _item;
    [Parameter]
    public object? Item
    {
        get
        {
            return _item;
        }
        set
        {
            _item = value;

            if (Item != null)
            {
                CastItem = (Yatter.UI.ListBuilder.ListItems.TextPanel)Item;
            }
        }
    }

    public Yatter.UI.ListBuilder.ListItems.TextPanel? CastItem { get; set; }

    public string? WordWrapping { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Item != null)
        {
            CastItem = (Yatter.UI.ListBuilder.ListItems.TextPanel)Item;
            WordWrapping = CastItem.LineBreakMode.Equals("normal") ? "white-space:normal;" : "white-space:nowrap;overflow:hidden;text-overflow:ellipsis;";
        }
        await base.OnInitializedAsync();
    }
    }
