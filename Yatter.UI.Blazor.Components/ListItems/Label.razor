@using ListBuilder = Yatter.UI.ListBuilder.ListItems;

<div style="visibility:@CastItem?.Visibility;color:@CastItem?.TextColor;@WordWrapping;margin:@CastItem?.Margin;padding:@CastItem?.Padding;">@CastItem?.Text</div>

@code {

    private object _item;
    [Parameter]
    public object? Item
    {
        get { return _item; }
        set { _item = value; if (_item != null) { CastItem = (Yatter.UI.ListBuilder.ListItems.Label)_item; } }
    }

    public Yatter.UI.ListBuilder.ListItems.Label? CastItem { get; set; }

    public string? WordWrapping { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Item == null) Item = new Yatter.UI.ListBuilder.ListItems.Label();
        WordWrapping = CastItem.LineBreakMode.Equals("normal") ? "white-space:normal;" : "white-space:nowrap;overflow:hidden;text-overflow:ellipsis;";

        await base.OnInitializedAsync();
    }
}
